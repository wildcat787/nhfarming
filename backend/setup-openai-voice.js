const fs = require('fs');
const path = require('path');
require('dotenv').config();

console.log('üé§ OpenAI Voice Transcription Setup');
console.log('===================================');

// Check if .env file exists
const envPath = path.join(__dirname, '.env');
const envExists = fs.existsSync(envPath);

console.log(`üìÅ .env file exists: ${envExists ? '‚úÖ Yes' : '‚ùå No'}`);

// Check current OpenAI API key
const currentKey = process.env.OPENAI_API_KEY;
console.log(`üîë OpenAI API Key: ${currentKey ? '‚úÖ Configured' : '‚ùå NOT CONFIGURED'}`);

if (!currentKey) {
  console.log('\nüìã Setup Instructions:');
  console.log('======================');
  console.log('1. Get your OpenAI API key:');
  console.log('   ‚Ä¢ Go to https://platform.openai.com/api-keys');
  console.log('   ‚Ä¢ Sign in or create an account');
  console.log('   ‚Ä¢ Click "Create new secret key"');
  console.log('   ‚Ä¢ Copy the key (starts with "sk-")');
  console.log('');
  console.log('2. Configure the API key:');
  console.log('   ‚Ä¢ Create a .env file in the backend folder');
  console.log('   ‚Ä¢ Add this line: OPENAI_API_KEY=your_api_key_here');
  console.log('   ‚Ä¢ Replace "your_api_key_here" with your actual key');
  console.log('');
  console.log('3. For production (Render):');
  console.log('   ‚Ä¢ Go to your Render dashboard');
  console.log('   ‚Ä¢ Find your backend service');
  console.log('   ‚Ä¢ Go to Environment tab');
  console.log('   ‚Ä¢ Add: OPENAI_API_KEY=your_api_key_here');
  console.log('');
  console.log('4. Test the setup:');
  console.log('   ‚Ä¢ Run: node test-voice-transcription.js');
  console.log('');
  
  // Create .env file if it doesn't exist
  if (!envExists) {
    console.log('üìù Creating .env file template...');
    const envTemplate = `# OpenAI API Key for Voice Transcription
# Get your key from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your_openai_api_key_here

# Other environment variables
NODE_ENV=development
JWT_SECRET=your_jwt_secret_here
FRONTEND_URL=http://localhost:3000

# Optional: Weather station configuration
# ECOWITT_LOCAL_URL=http://YOUR_STATION_IP
# ECOWITT_APP_KEY=your_application_key
# ECOWITT_USER_API_KEY=your_api_key
# ECOWITT_DEVICE_MAC=your_device_mac
`;
    
    fs.writeFileSync(envPath, envTemplate);
    console.log('‚úÖ .env file created with template');
    console.log('üìù Edit the file and add your OpenAI API key');
  }
} else {
  console.log('\n‚úÖ OpenAI API Key is configured!');
  console.log('üîç Testing configuration...');
  
  // Test the API key format
  if (currentKey.startsWith('sk-')) {
    console.log('‚úÖ API key format looks correct');
  } else {
    console.log('‚ö†Ô∏è  API key format may be incorrect (should start with "sk-")');
  }
  
  console.log('\nüìã Next steps:');
  console.log('1. Test voice transcription: node test-voice-transcription.js');
  console.log('2. Use the voice button in your app');
  console.log('3. Check the browser console for any errors');
}

console.log('\nüí∞ Cost Information:');
console.log('===================');
console.log('‚Ä¢ Free tier: $5 credit per month');
console.log('‚Ä¢ Cost per minute: $0.006');
console.log('‚Ä¢ Estimated usage: ~833 minutes per month (free)');
console.log('‚Ä¢ Voice transcription is very affordable');

console.log('\nüîß Troubleshooting:');
console.log('==================');
console.log('‚Ä¢ Make sure your API key is correct');
console.log('‚Ä¢ Check your OpenAI account has credits');
console.log('‚Ä¢ Ensure microphone permissions are granted');
console.log('‚Ä¢ Try in a different browser if issues persist');
console.log('‚Ä¢ Check browser console for detailed error messages'); 